services:
  classapp:
    build: 
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/skapp
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d city"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network
  frontend:
    build:
      context: ./skapp-frontend
      dockerfile: Dockerfile  # React用のDockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./skapp-frontend:/usr/src/app
      - /usr/src/app/node_modules
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
volumes:
  db-data:
networks:
  app-network:
    driver: bridge